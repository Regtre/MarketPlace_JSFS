{"ast":null,"code":"var _jsxFileName = \"/home/rems/Documents/FAC/L3/S6/JSFS/vendez_les_votre/client/src/components/Market.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ItemList from \"./ItemsList/ItemList\";\nimport ItemListSelf from \"./ItemsList/ItemListSelf\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timeRefresh = 2000;\nconst item_shem = {\n  name: \"\",\n  description: \"\",\n  price: 0\n};\nlet time = 0;\nsetInterval(() => {\n  time++;\n}, 1000);\n\nclass Market extends React.Component {\n  constructor(props) {\n    super(props);\n    this.navigate = useNavigate();\n    this.state = {\n      myId: {},\n      money: 0,\n      new_item: {},\n      items: []\n    };\n    const [, updateState] = useState();\n    const forceUpdate = useCallback(() => updateState({}), []);\n    const [value, setValue] = useState();\n    const [open, setOpen] = useState(false);\n    const [myId, set_myId] = useState({});\n    const [money, set_money] = useState(0);\n    const [new_item, set_new_item] = useState(item_shem);\n    const [items, set_items] = useState([]);\n  }\n\n  componentDidMount() {\n    axios.get(`${API.url()}/users/find/${API.getUserId()}`).then(res => {\n      set_myId(res.data);\n    }).catch(e => console.log(e));\n    set_items(API.getItemAll());\n  }\n\n  Information() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bienvenue \", myId.pseudo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Argent disponible : \", myId.money, \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n  HandleAddItem() {\n    console.log(new_item);\n    API.createItem(new_item).then(_ => {\n      set_items(oldItem => [...oldItem, new_item]);\n      set_new_item(item_shem);\n    }).catch(_ => console.log(\"erreur creation d'item\"));\n  }\n\n  Logout() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: () => {\n          API.logout();\n          navigate(\"/login\");\n        },\n        children: \"DECONNEXION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  AddMoney() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ajout d'argent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"number\",\n          onChange: e => set_money(e.target.value),\n          value: money,\n          label: \"Ajout d'argent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            let current_money = parseInt(myId.money);\n            console.log(current_money);\n            console.log(money);\n            current_money += parseInt(money);\n            if (current_money < 0) current_money = 0;\n            console.log(current_money);\n            API.setMoney(current_money);\n            set_myId({ ...myId,\n              money: current_money\n            });\n            setTimeout(() => {\n              set_money(0);\n            }, timeRefresh);\n            forceUpdate();\n          },\n          children: \"ENVOI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n  AddItem() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Ajout d'un nouvel item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          onChange: e => set_new_item({ ...new_item,\n            name: e.target.value\n          }),\n          value: new_item.name,\n          label: \"nom\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          onChange: e => set_new_item({ ...new_item,\n            description: e.target.value\n          }),\n          value: new_item.description,\n          label: \"description\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: \"15ch\"\n          },\n          id: \"standard-number\",\n          type: \"number\",\n          onChange: e => set_new_item({ ...new_item,\n            price: e.target.value\n          }),\n          value: new_item.price,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"prix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.HandleAddItem(),\n          children: \"ENVOI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.Information(), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(ItemList, {\n          money: myId.money,\n          items: items,\n          id: myId._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ItemListSelf, {\n          items: items,\n          id: myId._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), this.AddItem(), this.AddMoney(), \" \", this.Logout()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/rems/Documents/FAC/L3/S6/JSFS/vendez_les_votre/client/src/components/Market.js"],"names":["React","useState","useEffect","useCallback","ItemList","ItemListSelf","Button","TextField","Box","Grid","Backdrop","CircularProgress","useNavigate","axios","API","timeRefresh","item_shem","name","description","price","time","setInterval","Market","Component","constructor","props","navigate","state","myId","money","new_item","items","updateState","forceUpdate","value","setValue","open","setOpen","set_myId","set_money","set_new_item","set_items","componentDidMount","get","url","getUserId","then","res","data","catch","e","console","log","getItemAll","Information","textAlign","pseudo","HandleAddItem","createItem","_","oldItem","Logout","logout","AddMoney","target","current_money","parseInt","setMoney","setTimeout","AddItem","width","shrink","render","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,WAAW,GAAG,IAApB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,WAAW,EAAE,EAFG;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAAlB;AAMA,IAAIC,IAAI,GAAG,CAAX;AACAC,WAAW,CAAC,MAAM;AAChBD,EAAAA,IAAI;AACL,CAFU,EAER,IAFQ,CAAX;;AAIA,MAAME,MAAN,SAAqBtB,KAAK,CAACuB,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgBd,WAAW,EAA3B;AACA,SAAKe,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMA,UAAM,GAAGC,WAAH,IAAkB/B,QAAQ,EAAhC;AACA,UAAMgC,WAAW,GAAG9B,WAAW,CAAC,MAAM6B,WAAW,CAAC,EAAD,CAAlB,EAAwB,EAAxB,CAA/B;AACA,UAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,EAAlC;AACA,UAAM,CAACmC,IAAD,EAAOC,OAAP,IAAkBpC,QAAQ,CAAC,KAAD,CAAhC;AACA,UAAM,CAAC2B,IAAD,EAAOU,QAAP,IAAmBrC,QAAQ,CAAC,EAAD,CAAjC;AACA,UAAM,CAAC4B,KAAD,EAAQU,SAAR,IAAqBtC,QAAQ,CAAC,CAAD,CAAnC;AACA,UAAM,CAAC6B,QAAD,EAAWU,YAAX,IAA2BvC,QAAQ,CAACe,SAAD,CAAzC;AACA,UAAM,CAACe,KAAD,EAAQU,SAAR,IAAqBxC,QAAQ,CAAC,EAAD,CAAnC;AACD;;AAEDyC,EAAAA,iBAAiB,GAAG;AAClB7B,IAAAA,KAAK,CACF8B,GADH,CACQ,GAAE7B,GAAG,CAAC8B,GAAJ,EAAU,eAAc9B,GAAG,CAAC+B,SAAJ,EAAgB,EADlD,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbT,MAAAA,QAAQ,CAACS,GAAG,CAACC,IAAL,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CALhB;AAMAT,IAAAA,SAAS,CAAC3B,GAAG,CAACuC,UAAJ,EAAD,CAAT;AACD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,wBACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAT;AAAA,8BACE;AAAA,iCAAe3B,IAAI,CAAC4B,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,2CAAyB5B,IAAI,CAACC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAED4B,EAAAA,aAAa,GAAG;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACAhB,IAAAA,GAAG,CAAC4C,UAAJ,CAAe5B,QAAf,EACGgB,IADH,CACSa,CAAD,IAAO;AACXlB,MAAAA,SAAS,CAAEmB,OAAD,IAAa,CAAC,GAAGA,OAAJ,EAAa9B,QAAb,CAAd,CAAT;AACAU,MAAAA,YAAY,CAACxB,SAAD,CAAZ;AACD,KAJH,EAKGiC,KALH,CAKUU,CAAD,IAAOR,OAAO,CAACC,GAAR,CAAY,wBAAZ,CALhB;AAMD;;AAEDS,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,GAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,OAAO,EAAE,MAAM;AACb/C,UAAAA,GAAG,CAACgD,MAAJ;AACApC,UAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAEDqC,EAAAA,QAAQ,GAAG;AACT,wBACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAER,QAAAA,SAAS,EAAE;AAAb,OAAT;AAAA,8BACE,QAAC,GAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,QAAQ,EAAGL,CAAD,IAAOX,SAAS,CAACW,CAAC,CAACc,MAAF,CAAS9B,KAAV,CAF5B;AAGE,UAAA,KAAK,EAAEL,KAHT;AAIE,UAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,GAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM;AACb,gBAAIoC,aAAa,GAAGC,QAAQ,CAACtC,IAAI,CAACC,KAAN,CAA5B;AACAsB,YAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AACAd,YAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACAoC,YAAAA,aAAa,IAAIC,QAAQ,CAACrC,KAAD,CAAzB;AACA,gBAAIoC,aAAa,GAAG,CAApB,EAAuBA,aAAa,GAAG,CAAhB;AACvBd,YAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AACAnD,YAAAA,GAAG,CAACqD,QAAJ,CAAaF,aAAb;AACA3B,YAAAA,QAAQ,CAAC,EACP,GAAGV,IADI;AAEPC,cAAAA,KAAK,EAAEoC;AAFA,aAAD,CAAR;AAIAG,YAAAA,UAAU,CAAC,MAAM;AACf7B,cAAAA,SAAS,CAAC,CAAD,CAAT;AACD,aAFS,EAEPxB,WAFO,CAAV;AAGAkB,YAAAA,WAAW;AACZ,WAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoCD;;AAEDoC,EAAAA,OAAO,GAAG;AACR,wBACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEd,QAAAA,SAAS,EAAE;AAAb,OAAT;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAGL,CAAD,IACRV,YAAY,CAAC,EACX,GAAGV,QADQ;AAEXb,YAAAA,IAAI,EAAEiC,CAAC,CAACc,MAAF,CAAS9B;AAFJ,WAAD,CAHhB;AAQE,UAAA,KAAK,EAAEJ,QAAQ,CAACb,IARlB;AASE,UAAA,KAAK,EAAC,KATR;AAUE,UAAA,SAAS;AAVX;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAGiC,CAAD,IACRV,YAAY,CAAC,EACX,GAAGV,QADQ;AAEXZ,YAAAA,WAAW,EAAEgC,CAAC,CAACc,MAAF,CAAS9B;AAFX,WAAD,CAHhB;AAQE,UAAA,KAAK,EAAEJ,QAAQ,CAACZ,WARlB;AASE,UAAA,KAAK,EAAC,aATR;AAUE,UAAA,SAAS;AAVX;AAAA;AAAA;AAAA;AAAA,gBAbF,eAyBE,QAAC,SAAD;AACE,UAAA,EAAE,EAAE;AAAEoD,YAAAA,KAAK,EAAE;AAAT,WADN;AAEE,UAAA,EAAE,EAAC,iBAFL;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,QAAQ,EAAGpB,CAAD,IACRV,YAAY,CAAC,EACX,GAAGV,QADQ;AAEXX,YAAAA,KAAK,EAAE+B,CAAC,CAACc,MAAF,CAAS9B;AAFL,WAAD,CALhB;AAUE,UAAA,KAAK,EAAEJ,QAAQ,CAACX,KAVlB;AAWE,UAAA,eAAe,EAAE;AACfoD,YAAAA,MAAM,EAAE;AADO,WAXnB;AAcE,UAAA,KAAK,EAAC;AAdR;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eA4CE,QAAC,GAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKd,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkDD;;AACDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,iBACG,KAAKlB,WAAL,EADH,eAEE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE1B,IAAI,CAACC,KAAtB;AAA6B,UAAA,KAAK,EAAEE,KAApC;AAA2C,UAAA,EAAE,EAAEH,IAAI,CAAC6C;AAApD;AAAA;AAAA;AAAA;AAAA,gBADF,EAC8D,GAD9D,eAEE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE1C,KAArB;AAA4B,UAAA,EAAE,EAAEH,IAAI,CAAC6C;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAMG,KAAKJ,OAAL,EANH,EAOG,KAAKN,QAAL,EAPH,OAOqB,KAAKF,MAAL,EAPrB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAxKkC","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport ItemList from \"./ItemsList/ItemList\";\nimport ItemListSelf from \"./ItemsList/ItemListSelf\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport API from \"../utils/API\";\n\nconst timeRefresh = 2000;\n\nconst item_shem = {\n  name: \"\",\n  description: \"\",\n  price: 0,\n};\n\nlet time = 0;\nsetInterval(() => {\n  time++;\n}, 1000);\n\nclass Market extends React.Component {\n  constructor(props) {\n    super(props);\n    this.navigate = useNavigate();\n    this.state = {\n      myId: {},\n      money: 0,\n      new_item: {},\n      items: [],\n    };\n    const [, updateState] = useState();\n    const forceUpdate = useCallback(() => updateState({}), []);\n    const [value, setValue] = useState();\n    const [open, setOpen] = useState(false);\n    const [myId, set_myId] = useState({});\n    const [money, set_money] = useState(0);\n    const [new_item, set_new_item] = useState(item_shem);\n    const [items, set_items] = useState([]);\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${API.url()}/users/find/${API.getUserId()}`)\n      .then((res) => {\n        set_myId(res.data);\n      })\n      .catch((e) => console.log(e));\n    set_items(API.getItemAll());\n  }\n\n  Information() {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <h1>Bienvenue {myId.pseudo}</h1>\n        <h2>Argent disponible : {myId.money} €</h2>\n      </Box>\n    );\n  }\n\n  HandleAddItem() {\n    console.log(new_item);\n    API.createItem(new_item)\n      .then((_) => {\n        set_items((oldItem) => [...oldItem, new_item]);\n        set_new_item(item_shem);\n      })\n      .catch((_) => console.log(\"erreur creation d'item\"));\n  }\n\n  Logout() {\n    return (\n      <Box>\n        <Button\n          color=\"secondary\"\n          onClick={() => {\n            API.logout();\n            navigate(\"/login\");\n          }}\n        >\n          DECONNEXION\n        </Button>\n      </Box>\n    );\n  }\n\n  AddMoney() {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <Box>\n          <h2>Ajout d'argent</h2>\n          <TextField\n            type=\"number\"\n            onChange={(e) => set_money(e.target.value)}\n            value={money}\n            label=\"Ajout d'argent\"\n          ></TextField>\n        </Box>\n        <Box>\n          <Button\n            onClick={() => {\n              let current_money = parseInt(myId.money);\n              console.log(current_money);\n              console.log(money);\n              current_money += parseInt(money);\n              if (current_money < 0) current_money = 0;\n              console.log(current_money);\n              API.setMoney(current_money);\n              set_myId({\n                ...myId,\n                money: current_money,\n              });\n              setTimeout(() => {\n                set_money(0);\n              }, timeRefresh);\n              forceUpdate();\n            }}\n          >\n            ENVOI\n          </Button>\n        </Box>\n      </Box>\n    );\n  }\n\n  AddItem() {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <h2> Ajout d'un nouvel item</h2>\n        <div>\n          <TextField\n            type=\"text\"\n            onChange={(e) =>\n              set_new_item({\n                ...new_item,\n                name: e.target.value,\n              })\n            }\n            value={new_item.name}\n            label=\"nom\"\n            multiline\n          ></TextField>\n          <TextField\n            type=\"text\"\n            onChange={(e) =>\n              set_new_item({\n                ...new_item,\n                description: e.target.value,\n              })\n            }\n            value={new_item.description}\n            label=\"description\"\n            multiline\n          ></TextField>\n          <TextField\n            sx={{ width: \"15ch\" }}\n            id=\"standard-number\"\n            type=\"number\"\n            onChange={(e) =>\n              set_new_item({\n                ...new_item,\n                price: e.target.value,\n              })\n            }\n            value={new_item.price}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label=\"prix\"\n          ></TextField>\n        </div>\n        <Box>\n          <Button onClick={() => this.HandleAddItem()}>ENVOI</Button>\n        </Box>\n      </Box>\n    );\n  }\n  render() {\n    return (\n      <div>\n        {this.Information()}\n        <Grid container>\n          <ItemList money={myId.money} items={items} id={myId._id} />{\" \"}\n          <ItemListSelf items={items} id={myId._id} />\n        </Grid>\n        {this.AddItem()}\n        {this.AddMoney()} {this.Logout()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}