{"ast":null,"code":"var _jsxFileName = \"/home/rems/Documents/FAC/L3/S6/JSFS/vendez_les_votre/client/src/components/Feedback.js\";\nimport React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n});\n/**\n *Use to show a snack bar\n * @param {Object} props containe 2 values :\n *  - ok : boolean\n *  - text : String\n * @returns Return the Snackbar\n */\n\n_c2 = Alert;\nexport default function Feedback(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: props.open,\n      autoHideDuration: 6000,\n      onClose: handleClose,\n      message: \"Note archived\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: props.ok ? \"success\" : \"error\",\n        sx: {\n          width: \"100%\"\n        },\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c3 = Feedback;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Feedback\");","map":{"version":3,"sources":["/home/rems/Documents/FAC/L3/S6/JSFS/vendez_les_votre/client/src/components/Feedback.js"],"names":["React","useState","Button","MuiAlert","Snackbar","Alert","forwardRef","props","ref","Feedback","open","handleClose","ok","width","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,KAAK,gBAAGL,KAAK,CAACM,UAAN,MAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACxD,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC,QAA1C;AAAA,OAAuDD;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFa,CAAd;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;MAVMF,K;AAWN,eAAe,SAASI,QAAT,CAAkBF,KAAlB,EAAyB;AACtC,sBACE;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACG,IADd;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAEC,WAHX;AAIE,MAAA,OAAO,EAAC,eAJV;AAAA,6BAME,QAAC,KAAD;AACE,QAAA,OAAO,EAAEA,WADX;AAEE,QAAA,QAAQ,EAAEJ,KAAK,CAACK,EAAN,GAAW,SAAX,GAAuB,OAFnC;AAGE,QAAA,EAAE,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHN;AAAA,kBAKGN,KAAK,CAACO;AALT;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD;MAnBuBL,Q","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport Snackbar from \"@mui/material/Snackbar\";\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\n/**\n *Use to show a snack bar\n * @param {Object} props containe 2 values :\n *  - ok : boolean\n *  - text : String\n * @returns Return the Snackbar\n */\nexport default function Feedback(props) {\n  return (\n    <>\n      <Snackbar\n        open={props.open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message=\"Note archived\"\n      >\n        <Alert\n          onClose={handleClose}\n          severity={props.ok ? \"success\" : \"error\"}\n          sx={{ width: \"100%\" }}\n        >\n          {props.text}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}