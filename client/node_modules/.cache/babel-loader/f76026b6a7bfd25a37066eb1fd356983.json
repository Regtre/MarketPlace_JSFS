{"ast":null,"code":"var _jsxFileName = \"/home/rems/Documents/FAC/L3/S6/JSFS/vendez_les_votre/client/src/components/Market.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ItemList from \"./ItemsList/ItemList\";\nimport ItemListSelf from \"./ItemsList/ItemListSelf\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timeRefresh = 2000;\nconst item_shem = {\n  name: \"\",\n  description: \"\",\n  price: 0\n};\nlet time = 0;\nsetInterval(() => {\n  time++;\n}, 1000);\n\nclass Market extends React.Component {\n  constructor(props) {\n    super(props);\n    this.navigate = useNavigate();\n    this.state = {\n      myId: {},\n      money: 0,\n      new_item: {},\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${API.url()}/users/find/${API.getUserId()}`).then(res => {\n      this.setState({\n        myId: res.data\n      });\n    }).catch(e => console.log(e));\n    this.setState({\n      items: API.getItemAll()\n    });\n  }\n\n  Information() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bienvenue \", myId.pseudo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Argent disponible : \", myId.money, \" \\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  HandleAddItem() {\n    console.log(new_item);\n    API.createItem(new_item).then(_ => {\n      set_items(oldItem => [...oldItem, new_item]);\n      set_new_item(item_shem);\n    }).catch(_ => console.log(\"erreur creation d'item\"));\n  }\n\n  Logout() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: () => {\n          API.logout();\n          navigate(\"/login\");\n        },\n        children: \"DECONNEXION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  AddMoney() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ajout d'argent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"number\",\n          onChange: e => this.setState({\n            money: e.target.value\n          }),\n          value: this.state.money,\n          label: \"Ajout d'argent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            let current_money = parseInt(this.state.myId.money);\n            console.log(current_money);\n            console.log(this.state.money);\n            current_money += parseInt(this.state.money);\n            if (current_money < 0) current_money = 0;\n            console.log(current_money);\n            API.setMoney(current_money);\n            this.setState({\n              myId: {\n                money: current_money\n              }\n            });\n            setTimeout(() => {\n              this.set_money(0);\n            }, timeRefresh);\n          },\n          children: \"ENVOI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  AddItem() {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Ajout d'un nouvel item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          onChange: e => this.setState({\n            new_item: {\n              name: e.target.value\n            }\n          }),\n          value: this.state.new_item.name,\n          label: \"nom\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"text\",\n          onChange: e => this.setState({\n            new_item: {\n              description: e.target.value\n            }\n          }),\n          value: this.state.new_item.description,\n          label: \"description\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            width: \"15ch\"\n          },\n          id: \"standard-number\",\n          type: \"number\",\n          onChange: e => this.setState({\n            new_item: {\n              price: e.target.value\n            }\n          }),\n          value: this.state.new_item.price,\n          InputLabelProps: {\n            shrink: true\n          },\n          label: \"prix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.HandleAddItem(),\n          children: \"ENVOI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.Information(), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(ItemList, {\n          money: this.state.myId.money,\n          items: this.state.items,\n          id: this.state.myId._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ItemListSelf, {\n          items: this.state.items,\n          id: this.state.myId._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), this.AddItem(), this.AddMoney(), \" \", this.Logout()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/rems/Documents/FAC/L3/S6/JSFS/vendez_les_votre/client/src/components/Market.js"],"names":["React","useState","useEffect","useCallback","ItemList","ItemListSelf","Button","TextField","Box","Grid","useNavigate","axios","API","timeRefresh","item_shem","name","description","price","time","setInterval","Market","Component","constructor","props","navigate","state","myId","money","new_item","items","componentDidMount","get","url","getUserId","then","res","setState","data","catch","e","console","log","getItemAll","Information","textAlign","pseudo","HandleAddItem","createItem","_","set_items","oldItem","set_new_item","Logout","logout","AddMoney","target","value","current_money","parseInt","setMoney","setTimeout","set_money","AddItem","width","shrink","render","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport ItemList from \"./ItemsList/ItemList\";\nimport ItemListSelf from \"./ItemsList/ItemListSelf\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport API from \"../utils/API\";\n\nconst timeRefresh = 2000;\n\nconst item_shem = {\n  name: \"\",\n  description: \"\",\n  price: 0,\n};\n\nlet time = 0;\nsetInterval(() => {\n  time++;\n}, 1000);\n\nclass Market extends React.Component {\n  constructor(props) {\n    super(props);\n    this.navigate = useNavigate();\n    this.state = {\n      myId: {},\n      money: 0,\n      new_item: {},\n      items: [],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${API.url()}/users/find/${API.getUserId()}`)\n      .then((res) => {\n        this.setState({ myId: res.data });\n      })\n      .catch((e) => console.log(e));\n    this.setState({ items: API.getItemAll() });\n  }\n\n  Information() {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <h1>Bienvenue {myId.pseudo}</h1>\n        <h2>Argent disponible : {myId.money} €</h2>\n      </Box>\n    );\n  }\n\n  HandleAddItem() {\n    console.log(new_item);\n    API.createItem(new_item)\n      .then((_) => {\n        set_items((oldItem) => [...oldItem, new_item]);\n        set_new_item(item_shem);\n      })\n      .catch((_) => console.log(\"erreur creation d'item\"));\n  }\n\n  Logout() {\n    return (\n      <Box>\n        <Button\n          color=\"secondary\"\n          onClick={() => {\n            API.logout();\n            navigate(\"/login\");\n          }}\n        >\n          DECONNEXION\n        </Button>\n      </Box>\n    );\n  }\n\n  AddMoney() {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <Box>\n          <h2>Ajout d'argent</h2>\n          <TextField\n            type=\"number\"\n            onChange={(e) => this.setState({ money: e.target.value })}\n            value={this.state.money}\n            label=\"Ajout d'argent\"\n          ></TextField>\n        </Box>\n        <Box>\n          <Button\n            onClick={() => {\n              let current_money = parseInt(this.state.myId.money);\n              console.log(current_money);\n              console.log(this.state.money);\n              current_money += parseInt(this.state.money);\n              if (current_money < 0) current_money = 0;\n              console.log(current_money);\n              API.setMoney(current_money);\n              this.setState({\n                myId: {\n                  money: current_money,\n                },\n              });\n              setTimeout(() => {\n                this.set_money(0);\n              }, timeRefresh);\n            }}\n          >\n            ENVOI\n          </Button>\n        </Box>\n      </Box>\n    );\n  }\n\n  AddItem() {\n    return (\n      <Box sx={{ textAlign: \"center\" }}>\n        <h2> Ajout d'un nouvel item</h2>\n        <div>\n          <TextField\n            type=\"text\"\n            onChange={(e) =>\n              this.setState({\n                new_item: {\n                  name: e.target.value,\n                },\n              })\n            }\n            value={this.state.new_item.name}\n            label=\"nom\"\n            multiline\n          ></TextField>\n          <TextField\n            type=\"text\"\n            onChange={(e) =>\n              this.setState({\n                new_item: {\n                  description: e.target.value,\n                },\n              })\n            }\n            value={this.state.new_item.description}\n            label=\"description\"\n            multiline\n          ></TextField>\n          <TextField\n            sx={{ width: \"15ch\" }}\n            id=\"standard-number\"\n            type=\"number\"\n            onChange={(e) =>\n              this.setState({\n                new_item: {\n                  price: e.target.value,\n                },\n              })\n            }\n            value={this.state.new_item.price}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            label=\"prix\"\n          ></TextField>\n        </div>\n        <Box>\n          <Button onClick={() => this.HandleAddItem()}>ENVOI</Button>\n        </Box>\n      </Box>\n    );\n  }\n  render() {\n    return (\n      <div>\n        {this.Information()}\n        <Grid container>\n          <ItemList\n            money={this.state.myId.money}\n            items={this.state.items}\n            id={this.state.myId._id}\n          />{\" \"}\n          <ItemListSelf items={this.state.items} id={this.state.myId._id} />\n        </Grid>\n        {this.AddItem()}\n        {this.AddMoney()} {this.Logout()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}